buildscript {
  repositories {
    mavenLocal()
    maven{ url "http://SVN:8081/nexus/content/groups/public"}
    mavenCentral()
    jcenter()
  }
  dependencies {
    classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
  }
}

apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.github.johnrengelman.shadow'

defaultTasks 'shadowJar'

group = 'org.wjw.efjson'
version = "2.9.6"
ext {
  buildName = "easyfastjson"
}

repositories {
  mavenLocal()
  maven{ url "http://SVN:8081/nexus/content/groups/public"}
  mavenCentral()
  jcenter()
//flatDir(dirs: file('jarsDerectory'))
}


dependencies {
  compile files("lib/jackson-annotations-2.9.6.jar")
  compile files("lib/jackson-core-2.9.6.jar")
  compile files("lib/jackson-databind-2.9.6.jar")
//或者:  compile fileTree(dir: "lib", includes: ["*.jar"])
}

sourceSets {
	sourceCompatibility = 1.6
	targetCompatibility = 1.6
	main {
		java {
			srcDirs = ['src']
		}
		resources {
			srcDirs = ['src']
		}
	}
}

javadoc {
  failOnError=false
  destinationDir = file("${projectDir}/doc-api")
  title = "${project.buildName}"
  includes = ['org/wjw/efjson/*']

//  doLast {
//    clean.execute()
//  }
}

shadowJar {
  baseName = project.buildName
  classifier = null
  version = project.version
  
  relocate 'com.fasterxml.jackson', 'org.wjw.efjson.deps.com.fasterxml.jackson'
  
  exclude 'META-INF/maven/**'
  exclude 'META-INF/LICENSE'
  exclude 'META-INF/NOTICE'
  
  manifest {  //<--add
    attributes "Built-By": "wjw465150@gmail.com"
    attributes "Build-Name": "${project.buildName}"
    attributes "Build-Version": "${project.version}"
  }
  
  javadoc.execute()
  
}

uploadArchives {
  repositories.mavenDeployer {
    def mvnUsername = project.findProperty("mvnUsername") ?: ""
    def mvnPassword = project.findProperty("mvnPassword") ?: ""
  
    repository(url: "http://svn:8081/nexus/content/repositories/3rdparty/") {
      authentication(userName: mvnUsername, password: mvnPassword)
    }
    
    pom.groupId = "${project.group}"
    pom.artifactId = "${project.buildName}"
    pom.version = "${project.version}"
    pom.project {
      name project.name
      packaging 'jar'
      description 'Encapsulates Jackon JSON library, Fast Speed Easy Used Json Lib For java'
      
      licenses {
        license {
          name 'The Apache Software License, Version 2.0'
          url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
          distribution 'Encapsulates Jackon JSON library, Fast Speed Easy Used Json Lib For java'
        }
      }
    
      developers {
        developer {
          id 'wangjunwei'
          name 'Wang JunWei'
        }
      }
    }
  }
}

//为项目生成**.jar/**-javadoc.jar/**-sources.jar
task javadocJar(type: Jar, dependsOn: [shadowJar]) {
    classifier = 'javadoc'
    from 'doc-api'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar
    archives sourcesJar
}
